type AttendeesChecked @entity(immutable: true) {
  id: Bytes!
  eventId: BigInt! # uint256
  attendees: [Bytes!]! # address[]
  data: Bytes! # bytes
  sender: Bytes! # address
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ConditionModuleWhitelisted @entity(immutable: true) {
  id: Bytes!
  module: Bytes! # address
  name: String! # string
  whitelisted: Boolean! # bool
  sender: Bytes! # address
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EventCanceled @entity(immutable: true) {
  id: Bytes!
  eventId: BigInt! # uint256
  reason: String! # string
  data: Bytes! # bytes
  sender: Bytes! # address
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EventCreated @entity(immutable: true) {
  id: Bytes!
  eventId: BigInt! # uint256
  owner: Bytes! # address
  contentUri: String! # string
  endDate: BigInt! # uint256
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EventSettled @entity(immutable: true) {
  id: Bytes!
  eventId: BigInt! # uint256
  data: Bytes! # bytes
  sender: Bytes! # address
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EventUpdated @entity(immutable: true) {
  id: Bytes!
  eventId: BigInt! # uint256
  owner: Bytes! # address
  contentUri: String! # string
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Initialized @entity(immutable: true) {
  id: Bytes!
  version: BigInt! # uint64
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NewEnrollee @entity(immutable: true) {
  id: Bytes!
  eventId: BigInt! # uint256
  enrollee: Bytes! # address
  sender: Bytes! # address
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Paused @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Unpaused @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Upgraded @entity(immutable: true) {
  id: Bytes!
  implementation: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
